apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "base.labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "base.labels.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "base.labels.standard" . | nindent 8 }}
    spec:
      containers:
        - name: omada-controller
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: OMADA_PORT_DISCOVERY
              value: "{{ .Values.containerPorts.discovery }}"
            - name: OMADA_PORT_ADOPT_V1
              value: "{{ .Values.containerPorts.adoptV1 }}"
            - name: OMADA_PORT_UPGRADE_V1
              value: "{{ .Values.containerPorts.upgradeV1 }}"
            - name: OMADA_PORT_MANAGER_V1
              value: "{{ .Values.containerPorts.managerV1 }}"
            - name: OMADA_PORT_MANAGER_V2
              value: "{{ .Values.containerPorts.managerV2 }}"
            - name: OMADA_MANAGE_HTTPS_PORT
              value: "{{ .Values.containerPorts.portalHttps }}"
            - name: MONGO_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongoUri.secretName }}
                  key: {{ .Values.mongoUri.secretKey | quote }}
          ports:
            - name: portal-https
              containerPort: {{ .Values.containerPorts.portalHttps }}
              protocol: TCP
            - name: adopt-v1
              containerPort: {{ .Values.containerPorts.adoptV1 }}
              protocol: TCP
            - name: upgrade-v1
              containerPort: {{ .Values.containerPorts.upgradeV1 }}
              protocol: TCP
            - name: manager-v1
              containerPort: {{ .Values.containerPorts.managerV1 }}
              protocol: TCP
            - name: manager-v2
              containerPort: {{ .Values.containerPorts.managerV2 }}
              protocol: TCP
            - name: discovery
              containerPort: {{ .Values.containerPorts.discovery }}
              protocol: UDP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}

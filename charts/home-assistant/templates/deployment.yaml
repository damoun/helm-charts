apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "base.labels.standard" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels: {{- include "base.labels.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "base.labels.standard" . | nindent 8 }}
    spec:
      containers:
        - name: home-assistant
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          env: {{- toYaml .Values.env | nindent 12 }}
          envFrom: {{- toYaml .Values.envFrom | nindent 12 }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            capabilities:
              add:
                - CAP_NET_RAW
                - CAP_NET_BIND_SERVICE
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: {{ .Release.Name }}-storage
              mountPath: {{ .Values.persistence.path }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- else if .Values.persistence.subPathExpr }}
              subPathExpr: {{ .Values.persistence.subPathExpr }}
              {{- end }}
              mountPath: /config/.storage
            - name: config-volume
              mountPath: /config/configuration.yaml
              subPath: configuration.yaml
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: "{{ .Release.Name }}-storage"
          emptyDir: {}
        {{- else if .Values.persistence.existingClaim }}
        - name: "{{ .Release.Name }}-storage"
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- else }}
        - name: "{{ .Release.Name }}-storage"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-storage"
        {{- end }}
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
